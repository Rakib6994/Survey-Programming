{
 "reports": [
  {
   "__converted__": false,
   "createdOn": 1398735716,
   "id": "Default",
   "settings": {
    "aggregate": [],
    "charts": {
     "Age$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Age.shown, [Age.r1, Age.r2])",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Age",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Agreement$": {
      "nets": [],
      "stats": []
     },
     "Brand$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Brand.shown, [Brand.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Brand",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "C_AgeRangesInHH$meansummary": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "C_AgeRangesInHH$r1": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "C_AgeRangesInHH.r1.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "C_AgeRangesInHH,r1",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "C_AgeRangesInHH.r1.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "C_AgeRangesInHH,r1",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "C_AgeRangesInHH.r1.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "C_AgeRangesInHH,r1",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "C_AgeRangesInHH$r2": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "C_AgeRangesInHH.r2.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "C_AgeRangesInHH,r2",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "C_AgeRangesInHH.r2.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "C_AgeRangesInHH,r2",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "C_AgeRangesInHH.r2.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "C_AgeRangesInHH,r2",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "C_AgeRangesInHH$r3": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "C_AgeRangesInHH.r3.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "C_AgeRangesInHH,r3",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "C_AgeRangesInHH.r3.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "C_AgeRangesInHH,r3",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "C_AgeRangesInHH.r3.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "C_AgeRangesInHH,r3",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "C_AgeRangesInHH$r4": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "C_AgeRangesInHH.r4.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "C_AgeRangesInHH,r4",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "C_AgeRangesInHH.r4.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "C_AgeRangesInHH,r4",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "C_AgeRangesInHH.r4.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "C_AgeRangesInHH,r4",
         "qa": [
          [
           "OPT",
           "Optional cell"
          ]
         ],
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "C_Education$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "C_Employment$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "C_Frequency$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "C_Income$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "C_MarialStat$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "C_PplInHH$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "C_PplInHH.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "C_PplInHH",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "C_PplInHH.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "C_PplInHH",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "C_PplInHH.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "C_PplInHH",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Category$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Category.shown, [Category.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Category",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Check$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Check.shown, [Check.r1, Check.r2, Check.r3, Check.r4])",
         "dataIdx": 5,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Check",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "CheckQR$": {
      "nets": [],
      "stats": []
     },
     "CheckQRShelf$": {
      "nets": [],
      "stats": []
     },
     "ComputerComfort$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Conf$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "Conf.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Conf",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "Conf.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Conf",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "Conf.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Conf",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "ConfirmFind$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "DateTime$": {
      "nets": [],
      "stats": []
     },
     "EM1$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "EM2$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "ETControl$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(ETControl.shown, [ETControl.r1, ETControl.r2, ETControl.none])",
         "dataIdx": 4,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "ETControl",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "ET_Info$": {
      "nets": [],
      "stats": []
     },
     "Emotion$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "EmotionTime$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "EmotionTime.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "EmotionTime",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "EmotionTime.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "EmotionTime",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "EmotionTime.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "EmotionTime",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "F_EaseOfFind$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_EaseOfFind_FindProductA$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_EaseOfFind_FindProductB$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Flash1A$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(F_Flash1A.shown, [F_Flash1A])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "F_Flash1A",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "F_Flash1B$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Flash2A$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(F_Flash2A.shown, [F_Flash2A])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "F_Flash2A",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "F_Flash2B$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Flash3$r1": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Flash3$r2": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Flash3$r3": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Flash3$r4": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Flash3$r5": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_FlashCount$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "F_Practice$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(F_Practice.shown, [F_Practice])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "F_Practice",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "F_Practice2$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "FindCard$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(FindCard.shown, [FindCard.r1, FindCard.r2])",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "FindCard",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "FindCorrect$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "FindCorrect_FindProductA$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "FindCorrect_FindProductB$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "FindLetter$": {
      "nets": [],
      "stats": []
     },
     "FindNumber$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "FindNumber.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "FindNumber",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "FindNumber.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "FindNumber",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "FindNumber.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "FindNumber",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "FindProduct$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "net1",
        "row": {
         "cond": "(FindProduct.r12)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "net1",
         "link": "",
         "obj": "FindProduct,nets,net1",
         "show": true,
         "title": "Colgate 360 Advanced White 1pk",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "net2",
        "row": {
         "cond": "(FindProduct.r34) or (FindProduct.r36)",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "net2",
         "link": "",
         "obj": "FindProduct,nets,net2",
         "show": true,
         "title": "Colgate 360 Deep Clean 2 pk",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "net3",
        "row": {
         "cond": "(FindProduct.r14)",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "net3",
         "link": "",
         "obj": "FindProduct,nets,net3",
         "show": true,
         "title": "Colgate 360 Advanced White 4 pk",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": []
     },
     "FindProduct_FindProductA$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "FindProduct_FindProductB$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "FindTime$": {
      "nets": [],
      "stats": []
     },
     "FindTimeSeconds$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "FindTimeSeconds.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "FindTimeSeconds",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "FindTimeSeconds.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "FindTimeSeconds",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "FindTimeSeconds.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "FindTimeSeconds",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "FindTimeSeconds_FindProductA$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "FindTimeSeconds_FindProductA.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "FindTimeSeconds_FindProductA",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "FindTimeSeconds_FindProductA.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "FindTimeSeconds_FindProductA",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "FindTimeSeconds_FindProductA.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "FindTimeSeconds_FindProductA",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "FindTimeSeconds_FindProductB$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "FindTimeSeconds_FindProductB.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "FindTimeSeconds_FindProductB",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "FindTimeSeconds_FindProductB.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "FindTimeSeconds_FindProductB",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "FindTimeSeconds_FindProductB.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "FindTimeSeconds_FindProductB",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Finda$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Finda.shown, [Finda.r1, Finda.r2])",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Finda",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Findability$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Gender$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Image$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Image.shown, [Image.r1, Image.r2, Image.r3, Image.r4])",
         "dataIdx": 5,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Image",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "ImageText$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(ImageText.shown, [ImageText.r1, ImageText.r2, ImageText.r3, ImageText.r4])",
         "dataIdx": 5,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "ImageText",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "JobNumber$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(JobNumber.shown, [JobNumber.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "JobNumber",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Location$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Main_Interviewer$": {
      "nets": [],
      "stats": []
     },
     "P_QuantityPurchased$meansummary": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "P_QuantityPurchased$r1": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "P_QuantityPurchased.r1.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "P_QuantityPurchased,r1",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "P_QuantityPurchased.r1.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "P_QuantityPurchased,r1",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "P_QuantityPurchased.r1.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "P_QuantityPurchased,r1",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "P_QuantityPurchased$r2": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "P_QuantityPurchased.r2.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "P_QuantityPurchased,r2",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "P_QuantityPurchased.r2.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "P_QuantityPurchased,r2",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "P_QuantityPurchased.r2.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "P_QuantityPurchased,r2",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "P_Shopping$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(P_Shopping.shown, [P_Shopping.r1, P_Shopping.r2])",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "P_Shopping",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "P_Total_Products$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "P_Total_Products.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "P_Total_Products",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "P_Total_Products.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "P_Total_Products",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "P_Total_Products.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "P_Total_Products",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Phase$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Price$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Price.shown, [Price.r1, Price.r2, Price.r3, Price.r4])",
         "dataIdx": 5,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Price",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "QRCodes$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(QRCodes.shown, [QRCodes.r1, QRCodes.r2])",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "QRCodes",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$meansummary": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Communication$r1": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r1.c1) or (Q_Communication.r1.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r1.c4) or (Q_Communication.r1.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r1",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r1",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r1",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r10": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r10.c1) or (Q_Communication.r10.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r10.c4) or (Q_Communication.r10.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r10",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r10",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r10",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r11": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r11.c1) or (Q_Communication.r11.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r11.c4) or (Q_Communication.r11.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r11",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r11",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r11",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r12": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r12.c1) or (Q_Communication.r12.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r12.c4) or (Q_Communication.r12.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r12",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r12",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r12",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r2": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r2.c1) or (Q_Communication.r2.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r2.c4) or (Q_Communication.r2.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r2",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r2",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r2",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r3": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r3.c1) or (Q_Communication.r3.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r3.c4) or (Q_Communication.r3.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r3",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r3",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r3",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r4": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r4.c1) or (Q_Communication.r4.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r4.c4) or (Q_Communication.r4.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r4",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r4",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r4",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r5": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r5.c1) or (Q_Communication.r5.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r5.c4) or (Q_Communication.r5.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r5",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r5",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r5",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r6": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r6.c1) or (Q_Communication.r6.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r6.c4) or (Q_Communication.r6.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r6",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r6",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r6",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r7": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r7.c1) or (Q_Communication.r7.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r7.c4) or (Q_Communication.r7.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r7",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r7",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r7",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r8": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r8.c1) or (Q_Communication.r8.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r8.c4) or (Q_Communication.r8.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r8",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r8",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r8",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$r9": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Communication.r9.c1) or (Q_Communication.r9.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Communication,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Communication.r9.c4) or (Q_Communication.r9.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Communication,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Communication,r9",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Communication,r9",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Communication,r9",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Communication$top2": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Competition$meansummary": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Competition$r1": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r1.c1) or (Q_Competition.r1.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r1.c4) or (Q_Competition.r1.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r1",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r1",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r1",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$r2": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r2.c1) or (Q_Competition.r2.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r2.c4) or (Q_Competition.r2.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r2",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r2",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r2",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$r3": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r3.c1) or (Q_Competition.r3.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r3.c4) or (Q_Competition.r3.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r3",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r3",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r3",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$r4": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r4.c1) or (Q_Competition.r4.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r4.c4) or (Q_Competition.r4.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r4",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r4",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r4",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$r5": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r5.c1) or (Q_Competition.r5.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r5.c4) or (Q_Competition.r5.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r5",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r5",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r5",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$r6": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r6.c1) or (Q_Competition.r6.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r6.c4) or (Q_Competition.r6.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r6",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r6",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r6",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$r7": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r7.c1) or (Q_Competition.r7.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r7.c4) or (Q_Competition.r7.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r7",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r7",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r7",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$r8": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Competition.r8.c1) or (Q_Competition.r8.c2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Competition,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Competition.r8.c4) or (Q_Competition.r8.c5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Competition,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Competition,r8",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Competition,r8",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Competition,r8",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Competition$top2": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_DislikesNone_1$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_DislikesNone_1.shown, [Q_DislikesNone_1.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_DislikesNone_1",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_DislikesNone_2$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_DislikesNone_2.shown, [Q_DislikesNone_2.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_DislikesNone_2",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_DislikesNone_3$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_DislikesNone_3.shown, [Q_DislikesNone_3.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_DislikesNone_3",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_DislikesNone_4$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_DislikesNone_4.shown, [Q_DislikesNone_4.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_DislikesNone_4",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Dislikes_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_11$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_12$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_13$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_14$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_15$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_21$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_22$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_23$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_24$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_25$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_31$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_32$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_33$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_34$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_35$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_First_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_First_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_First_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_First_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Second_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Second_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Second_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Second_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Third_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Third_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Third_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Dislikes_Third_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_InitialImpressions$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_LikesNone_1$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_LikesNone_1.shown, [Q_LikesNone_1.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_LikesNone_1",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_LikesNone_2$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_LikesNone_2.shown, [Q_LikesNone_2.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_LikesNone_2",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_LikesNone_3$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_LikesNone_3.shown, [Q_LikesNone_3.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_LikesNone_3",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_LikesNone_34$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF((Q_LikesNone_34.r1), [Q_LikesNone_34.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_LikesNone_34",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_LikesNone_4$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_LikesNone_4.shown, [Q_LikesNone_4.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_LikesNone_4",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Likes_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_11$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_12$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_13$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_14$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_15$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_21$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_22$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_23$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_24$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_25$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_31$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_32$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_33$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_34$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_35$": {
      "aq": {
       "enabled": true,
       "type": "imgmap"
      },
      "frequency": {
       "enabled": true,
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_First_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_First_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_First_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_First_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Second_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Second_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Second_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Second_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Third_1$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Third_2$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Third_3$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_Likes_Third_4$": {
      "aq": {
       "enabled": false,
       "type": "imgmap"
      },
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Q_OA$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_OA.r1) or (Q_OA.r2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_OA,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_OA.r4) or (Q_OA.r5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_OA,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_OA",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_OA",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_OA",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_PI$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_PI.r1) or (Q_PI.r2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_PI,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_PI.r4) or (Q_PI.r5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_PI,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_PI",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_PI",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_PI",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_PackAtt$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Q_PackAtt.shown, [Q_PackAtt.r1, Q_PackAtt.r2, Q_PackAtt.r3, Q_PackAtt.r4, Q_PackAtt.r5, Q_PackAtt.r6, Q_PackAtt.r7, Q_PackAtt.r8, Q_PackAtt.r9])",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Q_PackAtt",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Q_Value$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [
       {
        "label": "top2",
        "row": {
         "cond": "(Q_Value.r1) or (Q_Value.r2)",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "top2",
         "link": "",
         "obj": "Q_Value,nets,top2",
         "show": true,
         "title": "Top 2",
         "type": "simple"
        },
        "type": "bar"
       },
       {
        "label": "bot2",
        "row": {
         "cond": "(Q_Value.r4) or (Q_Value.r5)",
         "dataIdx": 7,
         "excludeFromMean": false,
         "include": true,
         "intent": "net",
         "label": "bot2",
         "link": "",
         "obj": "Q_Value,nets,bot2",
         "show": true,
         "title": "Bottom 2",
         "type": "simple"
        },
        "type": "bar"
       }
      ],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "ALL",
         "dataIdx": 8,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Q_Value",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "ALL",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Q_Value",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "ALL",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Q_Value",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "RecruiterName$": {
      "nets": [],
      "stats": []
     },
     "Rescreen$": {
      "nets": [],
      "stats": []
     },
     "Resp$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "Resp.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "Resp",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "Resp.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "Resp",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "Resp.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "Resp",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Resp_Info$": {
      "nets": [],
      "stats": []
     },
     "SKU$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(SKU.shown, [SKU.r1])",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "SKU",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Age$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "S_Age.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "S_Age",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "S_Age.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "S_Age",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "S_Age.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "S_Age",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Brand_BUMO1$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "S_Brand_BUMO2$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "S_Brand_BUMO3$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "S_Brand_CategoryPurchased$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Brand_CategoryPurchased.shown, [S_Brand_CategoryPurchased.r1, S_Brand_CategoryPurchased.r2, S_Brand_CategoryPurchased.r3, S_Brand_CategoryPurchased.r4])",
         "dataIdx": 5,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Brand_CategoryPurchased",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Brand_NonRejecter1$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Brand_NonRejecter1.shown, [S_Brand_NonRejecter1.r1, S_Brand_NonRejecter1.r2, S_Brand_NonRejecter1.r3, S_Brand_NonRejecter1.r4, S_Brand_NonRejecter1.r5, S_Brand_NonRejecter1.r6, S_Brand_NonRejecter1.r7, S_Brand_NonRejecter1.r8, S_Brand_NonRejecter1.r9, S_Brand_NonRejecter1.r10, S_Brand_NonRejecter1.r11])",
         "dataIdx": 12,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Brand_NonRejecter1",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Brand_NonRejecter2$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Brand_NonRejecter2.shown, [S_Brand_NonRejecter2.r1, S_Brand_NonRejecter2.r2, S_Brand_NonRejecter2.r3, S_Brand_NonRejecter2.r4, S_Brand_NonRejecter2.r5, S_Brand_NonRejecter2.r6, S_Brand_NonRejecter2.r7, S_Brand_NonRejecter2.r8, S_Brand_NonRejecter2.r9, S_Brand_NonRejecter2.r10, S_Brand_NonRejecter2.r11])",
         "dataIdx": 12,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Brand_NonRejecter2",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Brand_NonRejecter3$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Brand_NonRejecter3.shown, [S_Brand_NonRejecter3.r1, S_Brand_NonRejecter3.r2, S_Brand_NonRejecter3.r3, S_Brand_NonRejecter3.r4, S_Brand_NonRejecter3.r5, S_Brand_NonRejecter3.r6, S_Brand_NonRejecter3.r7, S_Brand_NonRejecter3.r8, S_Brand_NonRejecter3.r9, S_Brand_NonRejecter3.r10, S_Brand_NonRejecter3.r11])",
         "dataIdx": 12,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Brand_NonRejecter3",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Brand_PastPurchased1$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Brand_PastPurchased1.shown, [S_Brand_PastPurchased1.r1, S_Brand_PastPurchased1.r2, S_Brand_PastPurchased1.r3, S_Brand_PastPurchased1.r4, S_Brand_PastPurchased1.r5, S_Brand_PastPurchased1.r6, S_Brand_PastPurchased1.r7, S_Brand_PastPurchased1.r8, S_Brand_PastPurchased1.r9, S_Brand_PastPurchased1.r10])",
         "dataIdx": 11,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Brand_PastPurchased1",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Brand_PastPurchased2$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Brand_PastPurchased2.shown, [S_Brand_PastPurchased2.r1, S_Brand_PastPurchased2.r2, S_Brand_PastPurchased2.r3, S_Brand_PastPurchased2.r4, S_Brand_PastPurchased2.r5, S_Brand_PastPurchased2.r6, S_Brand_PastPurchased2.r7, S_Brand_PastPurchased2.r8, S_Brand_PastPurchased2.r9, S_Brand_PastPurchased2.r10])",
         "dataIdx": 11,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Brand_PastPurchased2",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Brand_PastPurchased3$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Brand_PastPurchased3.shown, [S_Brand_PastPurchased3.r1, S_Brand_PastPurchased3.r2, S_Brand_PastPurchased3.r3, S_Brand_PastPurchased3.r4, S_Brand_PastPurchased3.r5, S_Brand_PastPurchased3.r6, S_Brand_PastPurchased3.r7, S_Brand_PastPurchased3.r8, S_Brand_PastPurchased3.r9, S_Brand_PastPurchased3.r10])",
         "dataIdx": 11,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Brand_PastPurchased3",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Eyesight$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "S_GroceryShop$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "S_Industry$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Industry.shown, [S_Industry.r1, S_Industry.r2, S_Industry.r3, S_Industry.r4, S_Industry.r5, S_Industry.r6, S_Industry.r7, S_Industry.r8, S_Industry.r9])",
         "dataIdx": 10,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Industry",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_PastParticipation$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_PastParticipation.shown, [S_PastParticipation.r1, S_PastParticipation.r2, S_PastParticipation.r3, S_PastParticipation.r4, S_PastParticipation.r5])",
         "dataIdx": 6,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_PastParticipation",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "S_Store$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(S_Store.shown, [S_Store.r1, S_Store.r2, S_Store.r3, S_Store.r4, S_Store.r5, S_Store.r6, S_Store.r7, S_Store.r8])",
         "dataIdx": 9,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "S_Store",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Sample$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Shelf$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Shelf.shown, [Shelf.r1, Shelf.r2, Shelf.r3, Shelf.r4])",
         "dataIdx": 5,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Shelf",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Shopping_Interviewer$": {
      "nets": [],
      "stats": []
     },
     "Straightliner$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Usage$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Usage.shown, [Usage.r1, Usage.r2])",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Usage",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "Version$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "Wave$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$counts",
        "row": {
         "cond": "COUNTIF(Wave.shown, [Wave.r1, Wave.r2, Wave.r3, Wave.r4, Wave.r5, Wave.r6, Wave.r7, Wave.r8, Wave.r9, Wave.r10, Wave.none])",
         "dataIdx": 12,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$counts",
         "link": "",
         "obj": "Wave",
         "show": true,
         "stat": "counts",
         "title": "Count",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "qtime$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": [
       {
        "label": "$mean",
        "row": {
         "cond": "qtime.val",
         "dataIdx": 1,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$mean",
         "link": "",
         "obj": "qtime",
         "show": true,
         "stat": "mean",
         "title": "Mean",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$median",
        "row": {
         "cond": "qtime.val",
         "dataIdx": 2,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$median",
         "link": "",
         "obj": "qtime",
         "show": true,
         "stat": "median",
         "title": "Median",
         "type": "numeric"
        },
        "type": "bar"
       },
       {
        "label": "$stddev",
        "row": {
         "cond": "qtime.val",
         "dataIdx": 3,
         "excludeFromMean": false,
         "include": true,
         "intent": "stat",
         "label": "$stddev",
         "link": "",
         "obj": "qtime",
         "show": true,
         "stat": "stddev",
         "title": "Standard Deviation",
         "type": "numeric"
        },
        "type": "bar"
       }
      ]
     },
     "vEaseOfFind$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "vFindCorrect$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "vbrowser$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "vlist$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "vmobiledevice$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "vmobileos$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     },
     "vos$": {
      "frequency": {
       "type": "bar"
      },
      "nets": [],
      "stats": []
     }
    },
    "colorPalette": "Purples",
    "colorPaletteList": {
     "3": [
      "#efedf5",
      "#bcbddc",
      "#756bb1"
     ],
     "4": [
      "#f2f0f7",
      "#cbc9e2",
      "#9e9ac8",
      "#6a51a3"
     ],
     "5": [
      "#f2f0f7",
      "#cbc9e2",
      "#9e9ac8",
      "#756bb1",
      "#54278f"
     ],
     "6": [
      "#f2f0f7",
      "#dadaeb",
      "#bcbddc",
      "#9e9ac8",
      "#756bb1",
      "#54278f"
     ],
     "7": [
      "#f2f0f7",
      "#dadaeb",
      "#bcbddc",
      "#9e9ac8",
      "#807dba",
      "#6a51a3",
      "#4a1486"
     ],
     "8": [
      "#fcfbfd",
      "#efedf5",
      "#dadaeb",
      "#bcbddc",
      "#9e9ac8",
      "#807dba",
      "#6a51a3",
      "#4a1486"
     ],
     "9": [
      "#fcfbfd",
      "#efedf5",
      "#dadaeb",
      "#bcbddc",
      "#9e9ac8",
      "#807dba",
      "#6a51a3",
      "#54278f",
      "#3f007d"
     ]
    },
    "hp": null,
    "legacyConverted": [
     "@R",
     "Q_OA",
     "Q_Communication",
     "F_EaseOfFind",
     "Q_Value",
     "Q_PI",
     "F_EaseOfFind_FindProductA",
     "F_EaseOfFind_FindProductB",
     "Emotion",
     "FindProduct",
     "F_Layout",
     "F_LineCommunication",
     "P_Shopping",
     "EaseofShopping",
     "P_QuantityPurchased",
     "vEaseOfFind"
    ],
    "objects": {
     "Age": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "BUMO": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Brand": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Category": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Channel": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Check": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Conf": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "Country": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Differentiation,r1": {
      "value": 5
     },
     "Differentiation,r2": {
      "value": 4
     },
     "Differentiation,r3": {
      "value": 3
     },
     "Differentiation,r4": {
      "value": 2
     },
     "Differentiation,r5": {
      "value": 1
     },
     "EF_Quality": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "EF_Status": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "ETControl": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "EaseofShopping": {
      "customBase": null,
      "netTableOrder": [
       "net1"
      ],
      "nets": [
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "net1",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Top2Box",
        "value": ""
       }
      ],
      "sortPreference": "default",
      "stats": [],
      "summary": []
     },
     "EaseofShopping,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "EaseofShopping,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "EaseofShopping,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "EaseofShopping,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "EaseofShopping,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "Emotion": {
      "customBase": null,
      "netTableOrder": [
       "net1",
       "net2"
      ],
      "nets": [
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "net1",
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Top 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r4",
         "r5"
        ],
        "label": "net2",
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       }
      ],
      "stats": [],
      "summary": []
     },
     "Emotion,r1": {
      "alt": "face 1",
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "Emotion,r2": {
      "alt": "face 2",
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "Emotion,r3": {
      "alt": "face 3",
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "Emotion,r4": {
      "alt": "face 4",
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "Emotion,r5": {
      "alt": "face 5",
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_Aesthetics": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "F_EaseOfFind": {
      "netTableOrder": [
       "net2"
      ],
      "nets": [
       {
        "CustomStat": true,
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2"
        ],
        "label": "net1",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r1",
          "original": "Very easy to find",
          "show": true,
          "text": "Very easy to find",
          "value": 1
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r2",
          "original": "Somewhat easy to find",
          "show": true,
          "text": "Somewhat easy to find",
          "value": 2
         }
        ],
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Top 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r4",
         "r5"
        ],
        "label": "net2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r4",
          "original": "Somewhat difficult to find",
          "show": true,
          "text": "Somewhat difficult to find",
          "value": 4
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r5",
          "original": "Very difficult to find",
          "show": true,
          "text": "Very difficult to find",
          "value": 5
         }
        ],
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       }
      ],
      "stats": [],
      "summary": []
     },
     "F_EaseOfFind,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductA": {
      "netTableOrder": [
       "net1",
       "net2"
      ],
      "nets": [
       {
        "CustomStat": true,
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "net1",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r1",
          "original": "Very easy to find",
          "show": true,
          "text": "Very easy to find",
          "value": 1
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r2",
          "original": "Somewhat easy to find",
          "show": true,
          "text": "Somewhat easy to find",
          "value": 2
         }
        ],
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Top 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r4",
         "r5"
        ],
        "label": "net2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r4",
          "original": "Somewhat difficult to find",
          "show": true,
          "text": "Somewhat difficult to find",
          "value": 4
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r5",
          "original": "Very difficult to find",
          "show": true,
          "text": "Very difficult to find",
          "value": 5
         }
        ],
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       }
      ],
      "stats": [],
      "summary": []
     },
     "F_EaseOfFind_FindProductA,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductA,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductA,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductA,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductA,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductB": {
      "netTableOrder": [
       "net1",
       "net2"
      ],
      "nets": [
       {
        "CustomStat": true,
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "net1",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r1",
          "original": "Very easy to find",
          "show": true,
          "text": "Very easy to find",
          "value": 1
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r2",
          "original": "Somewhat easy to find",
          "show": true,
          "text": "Somewhat easy to find",
          "value": 2
         }
        ],
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Top 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r4",
         "r5"
        ],
        "label": "net2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r4",
          "original": "Somewhat difficult to find",
          "show": true,
          "text": "Somewhat difficult to find",
          "value": 4
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r5",
          "original": "Very difficult to find",
          "show": true,
          "text": "Very difficult to find",
          "value": 5
         }
        ],
        "op": "or",
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       }
      ],
      "stats": [],
      "summary": []
     },
     "F_EaseOfFind_FindProductB,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductB,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductB,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductB,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_EaseOfFind_FindProductB,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_Flash1_I": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "F_Flash1_S": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "F_FlashCount,r4": {
      "randomize": 0
     },
     "F_Layout": {
      "customBase": null,
      "nets": [
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "c1"
        ],
        "label": "net1",
        "op": "or",
        "show": true,
        "summary": true,
        "tableType": 0,
        "title": "Top Box",
        "value": ""
       }
      ],
      "sortPreference": "default",
      "stats": [],
      "summary": []
     },
     "F_Layout,c1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_Layout,c2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_Layout,c3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_Layout,c4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_Layout,c5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_Layout,r1": {
      "hide": false
     },
     "F_Layout,r2": {
      "hide": false
     },
     "F_Layout,r3": {
      "hide": false
     },
     "F_Layout,r4": {
      "hide": false
     },
     "F_Layout,r5": {
      "hide": false
     },
     "F_Layout,r6": {
      "hide": false
     },
     "F_Layout,r7": {
      "hide": false
     },
     "F_LineCommunication": {
      "customBase": null,
      "nets": [
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "c1"
        ],
        "label": "net1",
        "op": "or",
        "show": true,
        "summary": true,
        "tableType": 0,
        "title": "Top Box",
        "value": ""
       }
      ],
      "sortPreference": "default",
      "stats": [],
      "summary": []
     },
     "F_LineCommunication,c1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_LineCommunication,c2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_LineCommunication,c3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_LineCommunication,c4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_LineCommunication,c5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "F_LineCommunication,r1": {
      "hide": false
     },
     "F_LineCommunication,r10": {
      "hide": false
     },
     "F_LineCommunication,r11": {
      "hide": false
     },
     "F_LineCommunication,r2": {
      "hide": false
     },
     "F_LineCommunication,r3": {
      "hide": false
     },
     "F_LineCommunication,r4": {
      "hide": false
     },
     "F_LineCommunication,r5": {
      "hide": false
     },
     "F_LineCommunication,r6": {
      "hide": false
     },
     "F_LineCommunication,r7": {
      "hide": false
     },
     "F_LineCommunication,r8": {
      "hide": false
     },
     "F_LineCommunication,r9": {
      "hide": false
     },
     "F_Practice_I": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "F_Practice_S": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "FamilyFit,r1": {
      "value": 5
     },
     "FamilyFit,r2": {
      "value": 4
     },
     "FamilyFit,r3": {
      "value": 3
     },
     "FamilyFit,r4": {
      "value": 2
     },
     "FamilyFit,r5": {
      "value": 1
     },
     "FindCard": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "FindProduct": {
      "customBase": null,
      "netTableOrder": [
       "net4"
      ],
      "nets": [
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r12"
        ],
        "label": "net1",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate 360 Advanced White 1pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r34",
         "r36"
        ],
        "label": "net2",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate 360 Deep Clean 2 pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r14"
        ],
        "label": "net3",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate 360 Advanced White 4 pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r12",
         "r14",
         "r34",
         "r36"
        ],
        "label": "net4",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Combine",
        "value": ""
       }
      ],
      "rowOrder": [
       "net4",
       "net1",
       "net2",
       "net3",
       "r1",
       "r2",
       "r3",
       "r4",
       "r5",
       "r6",
       "r7",
       "r8",
       "r9",
       "r10",
       "r11",
       "r12",
       "r13",
       "r14",
       "r15",
       "r16",
       "r17",
       "r18",
       "r19",
       "r20",
       "r21",
       "r22",
       "r23",
       "r24",
       "r25",
       "r26",
       "r27",
       "r28",
       "r29",
       "r30",
       "r31",
       "r32",
       "r33",
       "r34",
       "r35",
       "r36",
       "r37",
       "r38",
       "r39",
       "r40",
       "r41",
       "r42",
       "r43",
       "r44",
       "r45",
       "r46",
       "r47",
       "r48",
       "r49",
       "r50"
      ],
      "sortPreference": "default",
      "stats": [],
      "summary": []
     },
     "FindProduct,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r10": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r11": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r12": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r13": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r14": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r15": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r16": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r17": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r18": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r19": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r20": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r21": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r22": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r23": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r24": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r25": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r26": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r27": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r28": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r29": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r30": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r31": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r32": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r33": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r34": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r35": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r36": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r37": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r38": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r39": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r40": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r41": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r42": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r43": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r44": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r45": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r46": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r47": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r48": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r49": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r50": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r6": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r7": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r8": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindProduct,r9": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "FindTimeSeconds": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "Finda": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "FreqQual": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Gender": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Image": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "ImagePR": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "ImageText": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "JobNumber": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Led": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Location,US10": {
      "value": 10
     },
     "Location,US11": {
      "value": 11
     },
     "Location,US12": {
      "value": 12
     },
     "Location,US13": {
      "value": 13
     },
     "Location,ZZ999": {
      "value": 9999
     },
     "O_PurchaseDuration": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "P_BackPanelTotal": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "P_PickUpTotal": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "P_PickUp_BackOfPack": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "P_QuantityPurchased": {
      "customBase": null,
      "locked_stats": [
       "sum"
      ],
      "nets": [],
      "numnets": [],
      "rowOrder": [
       "$mean",
       "$median",
       "$stddev",
       "$se",
       "$sum",
       "$min",
       "$max"
      ],
      "sortPreference": "default",
      "stats": [
       "sum"
      ],
      "summary": [
       "sum"
      ]
     },
     "P_QuantityPurchased,r1": {
      "hide": false
     },
     "P_QuantityPurchased,r10": {
      "hide": false
     },
     "P_QuantityPurchased,r11": {
      "hide": false
     },
     "P_QuantityPurchased,r12": {
      "hide": false
     },
     "P_QuantityPurchased,r13": {
      "hide": false
     },
     "P_QuantityPurchased,r14": {
      "hide": false
     },
     "P_QuantityPurchased,r15": {
      "hide": false
     },
     "P_QuantityPurchased,r16": {
      "hide": false
     },
     "P_QuantityPurchased,r17": {
      "hide": false
     },
     "P_QuantityPurchased,r18": {
      "hide": false
     },
     "P_QuantityPurchased,r19": {
      "hide": false
     },
     "P_QuantityPurchased,r2": {
      "hide": false
     },
     "P_QuantityPurchased,r20": {
      "hide": false
     },
     "P_QuantityPurchased,r21": {
      "hide": false
     },
     "P_QuantityPurchased,r22": {
      "hide": false
     },
     "P_QuantityPurchased,r23": {
      "hide": false
     },
     "P_QuantityPurchased,r24": {
      "hide": false
     },
     "P_QuantityPurchased,r25": {
      "hide": false
     },
     "P_QuantityPurchased,r26": {
      "hide": false
     },
     "P_QuantityPurchased,r27": {
      "hide": false
     },
     "P_QuantityPurchased,r28": {
      "hide": false
     },
     "P_QuantityPurchased,r29": {
      "hide": false
     },
     "P_QuantityPurchased,r3": {
      "hide": false
     },
     "P_QuantityPurchased,r30": {
      "hide": false
     },
     "P_QuantityPurchased,r31": {
      "hide": false
     },
     "P_QuantityPurchased,r32": {
      "hide": false
     },
     "P_QuantityPurchased,r33": {
      "hide": false
     },
     "P_QuantityPurchased,r34": {
      "hide": false
     },
     "P_QuantityPurchased,r35": {
      "hide": false
     },
     "P_QuantityPurchased,r36": {
      "hide": false
     },
     "P_QuantityPurchased,r37": {
      "hide": false
     },
     "P_QuantityPurchased,r38": {
      "hide": false
     },
     "P_QuantityPurchased,r39": {
      "hide": false
     },
     "P_QuantityPurchased,r4": {
      "hide": false
     },
     "P_QuantityPurchased,r40": {
      "hide": false
     },
     "P_QuantityPurchased,r41": {
      "hide": false
     },
     "P_QuantityPurchased,r42": {
      "hide": false
     },
     "P_QuantityPurchased,r43": {
      "hide": false
     },
     "P_QuantityPurchased,r44": {
      "hide": false
     },
     "P_QuantityPurchased,r45": {
      "hide": false
     },
     "P_QuantityPurchased,r46": {
      "hide": false
     },
     "P_QuantityPurchased,r47": {
      "hide": false
     },
     "P_QuantityPurchased,r48": {
      "hide": false
     },
     "P_QuantityPurchased,r49": {
      "hide": false
     },
     "P_QuantityPurchased,r5": {
      "hide": false
     },
     "P_QuantityPurchased,r50": {
      "hide": false
     },
     "P_QuantityPurchased,r6": {
      "hide": false
     },
     "P_QuantityPurchased,r7": {
      "hide": false
     },
     "P_QuantityPurchased,r8": {
      "hide": false
     },
     "P_QuantityPurchased,r9": {
      "hide": false
     },
     "P_Shopping": {
      "customBase": null,
      "locked_stats": [
       "counts"
      ],
      "nets": [
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5",
         "r6",
         "r7",
         "r8",
         "r9",
         "r10",
         "r11",
         "r12",
         "r13",
         "r14",
         "r15",
         "r16",
         "r17",
         "r18",
         "r19",
         "r20",
         "r21",
         "r22",
         "r23",
         "r24",
         "r25",
         "r26",
         "r27",
         "r28",
         "r29",
         "r30",
         "r31",
         "r32",
         "r33",
         "r34",
         "r35",
         "r36",
         "r37",
         "r38",
         "r39",
         "r40",
         "r41",
         "r42",
         "r43",
         "r44",
         "r45",
         "r46",
         "r47",
         "r48",
         "r49",
         "r50"
        ],
        "label": "$counts",
        "op": "counts",
        "randomize": 0,
        "show": true,
        "summary": true,
        "text": "Count",
        "title": "Count",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r10",
         "r11",
         "r12",
         "r13",
         "r14",
         "r26",
         "r27",
         "r32",
         "r33",
         "r34",
         "r36",
         "r38",
         "r40",
         "r48",
         "r49",
         "r50"
        ],
        "label": "net1",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate Franchise",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r10",
         "r11",
         "r12",
         "r13",
         "r14",
         "r26",
         "r27",
         "r33",
         "r34",
         "r36",
         "r38",
         "r40"
        ],
        "label": "net2",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate Test",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r12",
         "r13",
         "r14"
        ],
        "label": "net3",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Colgate Advanced White 360",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r33",
         "r34",
         "r36",
         "r38",
         "r40"
        ],
        "label": "net4",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Colgate Deep Clean 360",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r10",
         "r11"
        ],
        "label": "net5",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate Gum Health Charcoal",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r34",
         "r36"
        ],
        "label": "net6",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Colgate 360 Deep Clean Soft 2pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r38",
         "r40"
        ],
        "label": "net7",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate 360 Deep Clean Soft 4pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5",
         "r6",
         "r7",
         "r15",
         "r16",
         "r18",
         "r19",
         "r20",
         "r22",
         "r28",
         "r29",
         "r41",
         "r42",
         "r43"
        ],
        "label": "net8",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Oral B Franchise",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r17",
         "r21",
         "r23",
         "r35",
         "r37",
         "r39"
        ],
        "label": "net9",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Equate Franchise",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r30",
         "r31",
         "r44",
         "r45"
        ],
        "label": "net10",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Reach Franchise",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r46",
         "r47"
        ],
        "label": "net11",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Dr Fresh Franchise",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r48",
         "r49",
         "r50"
        ],
        "label": "net12",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate Extra Clean",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r12",
         "r13",
         "r14",
         "r27",
         "r33",
         "r34",
         "r36",
         "r38",
         "r40"
        ],
        "label": "net13",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Colgate 360",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r10",
         "r11",
         "r26"
        ],
        "label": "net14",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Gum Health Net",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r14",
         "r38",
         "r40"
        ],
        "label": "net15",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate 4pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r13",
         "r26",
         "r27",
         "r34",
         "r36",
         "r38",
         "r40"
        ],
        "label": "net16",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate 2pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r12",
         "r33"
        ],
        "label": "net17",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate Single pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5",
         "r6",
         "r7",
         "r15",
         "r16",
         "r18",
         "r19",
         "r20",
         "r22"
        ],
        "label": "net18",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Oral B Premium",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r28",
         "r29",
         "r41",
         "r42",
         "r43"
        ],
        "label": "net19",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Oral B Base",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r12",
         "r33"
        ],
        "label": "net24",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Colgate 360 1pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": false,
        "isGridTableNet": false,
        "items": [
         "r13",
         "r27",
         "r34",
         "r36"
        ],
        "label": "net25",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Colgate 360 2pk",
        "value": ""
       },
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": false,
        "isGridTableNet": false,
        "items": [
         "r14",
         "r38",
         "r40"
        ],
        "label": "net26",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": "2",
        "title": "Colgate 360 4pk",
        "value": ""
       }
      ],
      "rowOrder": [
       "net13",
       "net24",
       "net25",
       "net26",
       "net1",
       "net8",
       "net18",
       "net19",
       "net9",
       "net10",
       "net11",
       "net2",
       "net3",
       "net4",
       "net5",
       "net6",
       "net7",
       "net12",
       "net14",
       "r1",
       "r2",
       "r3",
       "r4",
       "r5",
       "r6",
       "r7",
       "r8",
       "r9",
       "r10",
       "r11",
       "r12",
       "r13",
       "r14",
       "r15",
       "r16",
       "r17",
       "r18",
       "r19",
       "r20",
       "r21",
       "r22",
       "r23",
       "r24",
       "r25",
       "r26",
       "r27",
       "r28",
       "r29",
       "r30",
       "r31",
       "r32",
       "r33",
       "r34",
       "r35",
       "r36",
       "r37",
       "r38",
       "r39",
       "r40",
       "r41",
       "r42",
       "r43",
       "r44",
       "r45",
       "r46",
       "r47",
       "r48",
       "r49",
       "r50",
       "net15",
       "net16",
       "net17",
       "$counts"
      ],
      "sortPreference": "default",
      "stats": [],
      "summary": []
     },
     "P_Shopping,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r10": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r11": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r12": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r13": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r14": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r15": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r16": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r17": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r18": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r19": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r20": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r21": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r22": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r23": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r24": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r25": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r26": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r27": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r28": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r29": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r30": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r31": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r32": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r33": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r34": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r35": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r36": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r37": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r38": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r39": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r40": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r41": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r42": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r43": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r44": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r45": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r46": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r47": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r48": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r49": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r50": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r6": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r7": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r8": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Shopping,r9": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false
     },
     "P_Total_Products": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "Price": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_Communication": {
      "nets": [
       {
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "c1",
         "c2"
        ],
        "label": "top2",
        "nettedItems": [
         {
          "__type__": "Col",
          "cellType": "col",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "c1",
          "original": "Agree Strongly",
          "show": true,
          "text": "Agree Strongly",
          "value": 5
         },
         {
          "__type__": "Col",
          "cellType": "col",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "c2",
          "original": "Agree Somewhat",
          "show": true,
          "text": "Agree Somewhat",
          "value": 4
         }
        ],
        "show": true,
        "summary": true,
        "title": "Top 2 Box"
       },
       {
        "__type__": "NetRow",
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "c4",
         "c5"
        ],
        "label": "bot2",
        "nettedItems": [
         {
          "__type__": "Col",
          "cellType": "col",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "c4",
          "original": "Disagree Somewhat",
          "show": true,
          "text": "Disagree Somewhat",
          "value": 2
         },
         {
          "__type__": "Col",
          "cellType": "col",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "c5",
          "original": "Disagree Strongly",
          "show": true,
          "text": "Disagree Strongly",
          "value": 1
         }
        ],
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "c1",
         "c2",
         "c3",
         "c4",
         "c5"
        ],
        "label": "$mean",
        "op": "mean",
        "show": true,
        "summary": true,
        "text": "Mean",
        "title": "Mean",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "c1",
         "c2",
         "c3",
         "c4",
         "c5"
        ],
        "label": "$median",
        "op": "median",
        "show": true,
        "summary": false,
        "text": "Median",
        "title": "Median",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "c1",
         "c2",
         "c3",
         "c4",
         "c5"
        ],
        "label": "$stddev",
        "op": "stddev",
        "show": true,
        "summary": false,
        "text": "Standard Deviation",
        "title": "Standard Deviation",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": false,
        "isGridTableNet": false,
        "items": [
         "c1"
        ],
        "label": "net1",
        "nettedItems": [
         {
          "__type__": "Col",
          "cellType": "col",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "c1",
          "original": "Agree Strongly",
          "show": true,
          "text": "Agree Strongly",
          "value": 5
         }
        ],
        "op": "or",
        "show": true,
        "summary": true,
        "title": "Top Box",
        "value": ""
       }
      ],
      "rowOrder": [
       "net1",
       "top2",
       "c1",
       "c2",
       "c3",
       "c4",
       "c5",
       "bot2",
       "$mean",
       "$median",
       "$stddev"
      ],
      "stats": [],
      "summary": []
     },
     "Q_Communication,c1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 5
     },
     "Q_Communication,c2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 4
     },
     "Q_Communication,c3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 3
     },
     "Q_Communication,c4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 2
     },
     "Q_Communication,c5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 1
     },
     "Q_Communication,r1": {
      "hide": false
     },
     "Q_Communication,r10": {
      "hide": false
     },
     "Q_Communication,r11": {
      "hide": false
     },
     "Q_Communication,r12": {
      "hide": false
     },
     "Q_Communication,r2": {
      "hide": false
     },
     "Q_Communication,r3": {
      "hide": false
     },
     "Q_Communication,r4": {
      "hide": false
     },
     "Q_Communication,r5": {
      "hide": false
     },
     "Q_Communication,r6": {
      "hide": false
     },
     "Q_Communication,r7": {
      "hide": false
     },
     "Q_Communication,r8": {
      "hide": false
     },
     "Q_Communication,r9": {
      "hide": false
     },
     "Q_DislikesNone_11": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_12": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_13": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_14": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_15": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_21": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_22": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_23": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_24": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_25": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_31": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_32": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_33": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_34": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_DislikesNone_35": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_11": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_12": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_13": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_14": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_15": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_21": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_22": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_23": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_24": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_25": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_31": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_32": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_33": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_34": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_LikesNone_35": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Q_OA": {
      "nets": [
       {
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "top2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r1",
          "original": "Like it very much",
          "show": true,
          "text": "Like it very much",
          "value": 5
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r2",
          "original": "Like it somewhat",
          "show": true,
          "text": "Like it somewhat",
          "value": 4
         }
        ],
        "show": true,
        "summary": true,
        "title": "Top 2 Box",
        "value": ""
       },
       {
        "__type__": "NetRow",
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r4",
         "r5"
        ],
        "label": "bot2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r4",
          "original": "Dislike it somewhat",
          "show": true,
          "text": "Dislike it somewhat",
          "value": 2
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r5",
          "original": "Dislike it very much",
          "show": true,
          "text": "Dislike it very much",
          "value": 1
         }
        ],
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$mean",
        "op": "mean",
        "show": true,
        "summary": true,
        "text": "Mean",
        "title": "Mean",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$median",
        "op": "median",
        "show": true,
        "summary": false,
        "text": "Median",
        "title": "Median",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$stddev",
        "op": "stddev",
        "show": true,
        "summary": false,
        "text": "Standard Deviation",
        "title": "Standard Deviation",
        "value": ""
       }
      ],
      "rowOrder": [
       "top2",
       "r1",
       "r2",
       "r3",
       "r4",
       "r5",
       "bot2",
       "$mean",
       "$median",
       "$stddev"
      ],
      "stats": [],
      "summary": []
     },
     "Q_OA,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 5
     },
     "Q_OA,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 4
     },
     "Q_OA,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 3
     },
     "Q_OA,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 2
     },
     "Q_OA,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 1
     },
     "Q_PI": {
      "nets": [
       {
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "top2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r1",
          "original": "Definitely would buy",
          "show": true,
          "text": "Definitely would buy",
          "value": 5
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r2",
          "original": "Probably would buy",
          "show": true,
          "text": "Probably would buy",
          "value": 4
         }
        ],
        "show": true,
        "summary": true,
        "title": "Top 2 Box",
        "value": ""
       },
       {
        "__type__": "NetRow",
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r4",
         "r5"
        ],
        "label": "bot2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r4",
          "original": "Probably would not buy",
          "show": true,
          "text": "Probably would not buy",
          "value": 2
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r5",
          "original": "Definitely would not buy",
          "show": true,
          "text": "Definitely would not buy",
          "value": 1
         }
        ],
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$mean",
        "op": "mean",
        "show": true,
        "summary": true,
        "text": "Mean",
        "title": "Mean",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$median",
        "op": "median",
        "show": true,
        "summary": false,
        "text": "Median",
        "title": "Median",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$stddev",
        "op": "stddev",
        "show": true,
        "summary": false,
        "text": "Standard Deviation",
        "title": "Standard Deviation",
        "value": ""
       }
      ],
      "rowOrder": [
       "top2",
       "r1",
       "r2",
       "r3",
       "r4",
       "r5",
       "bot2",
       "$mean",
       "$median",
       "$stddev"
      ],
      "stats": [],
      "summary": []
     },
     "Q_PI,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 5
     },
     "Q_PI,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 4
     },
     "Q_PI,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 3
     },
     "Q_PI,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 2
     },
     "Q_PI,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 1
     },
     "Q_Value": {
      "nets": [
       {
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "top2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r1",
          "original": "A very good value",
          "show": true,
          "text": "A very good value",
          "value": 5
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r2",
          "original": "A somewhat good value",
          "show": true,
          "text": "A somewhat good value",
          "value": 4
         }
        ],
        "show": true,
        "summary": true,
        "title": "Top 2 Box",
        "value": ""
       },
       {
        "__type__": "NetRow",
        "above": false,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "include": true,
        "includeTotal": true,
        "isGridTableNet": false,
        "items": [
         "r4",
         "r5"
        ],
        "label": "bot2",
        "nettedItems": [
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r4",
          "original": "A somewhat poor value",
          "show": true,
          "text": "A somewhat poor value",
          "value": 2
         },
         {
          "__type__": "Row",
          "cellType": "row",
          "excludeFromMean": false,
          "excludeTotal": false,
          "hide": false,
          "includeTotal": true,
          "label": "r5",
          "original": "A very poor value",
          "show": true,
          "text": "A very poor value",
          "value": 1
         }
        ],
        "show": true,
        "summary": false,
        "title": "Bottom 2 Box",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$mean",
        "op": "mean",
        "show": true,
        "summary": true,
        "text": "Mean",
        "title": "Mean",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$median",
        "op": "median",
        "show": true,
        "summary": false,
        "text": "Median",
        "title": "Median",
        "value": ""
       },
       {
        "CustomStat": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "hide": false,
        "includeTotal": true,
        "items": [
         "r1",
         "r2",
         "r3",
         "r4",
         "r5"
        ],
        "label": "$stddev",
        "op": "stddev",
        "show": true,
        "summary": false,
        "text": "Standard Deviation",
        "title": "Standard Deviation",
        "value": ""
       }
      ],
      "rowOrder": [
       "top2",
       "r1",
       "r2",
       "r3",
       "r4",
       "r5",
       "bot2",
       "$mean",
       "$median",
       "$stddev"
      ],
      "stats": [],
      "summary": []
     },
     "Q_Value,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 5
     },
     "Q_Value,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 4
     },
     "Q_Value,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 3
     },
     "Q_Value,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 2
     },
     "Q_Value,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 1
     },
     "RealEye_Quality": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "RealEye_Status": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "Resp": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "S_Age": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "S_Brand_BUMO": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "S_Brand_PastPurchased": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "S_Brand_PastPurchased3": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "S_Industry": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "S_METQual": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "S_PastParticipation": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "S_Recruit_Incentive": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "S_Spend2": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Shelf": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "ShopTimeSeconds": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "Usage": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "Wave": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     },
     "qtime": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "vEaseOfFind": {
      "customBase": null,
      "netTableOrder": [
       "net1"
      ],
      "nets": [
       {
        "CustomStat": true,
        "__type__": "NetRow",
        "above": true,
        "cellType": "netrow",
        "excludeFromBase": false,
        "expanded": true,
        "hide": false,
        "includeTotal": false,
        "items": [
         "r1",
         "r2"
        ],
        "label": "net1",
        "op": "or",
        "show": true,
        "summary": false,
        "tableType": 0,
        "title": "Top 2 Box",
        "value": ""
       }
      ],
      "sortPreference": "default",
      "stats": [],
      "summary": []
     },
     "vEaseOfFind,r1": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 5
     },
     "vEaseOfFind,r2": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 4
     },
     "vEaseOfFind,r3": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 3
     },
     "vEaseOfFind,r4": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 2
     },
     "vEaseOfFind,r5": {
      "excludeFromMean": false,
      "excludeTotal": false,
      "hide": false,
      "value": 1
     },
     "vFindTimeSeconds": {
      "locked_stats": [
       "mean",
       "median",
       "stddev"
      ],
      "stats": [
       "mean",
       "median",
       "stddev"
      ],
      "summary": [
       "mean"
      ]
     },
     "vProductsBought": {
      "locked_stats": [
       "counts"
      ],
      "stats": [
       "counts"
      ],
      "summary": [
       "counts"
      ]
     }
    },
    "pct": 0,
    "rows": {},
    "sigtestMajor": 95,
    "sigtestMinor": 90,
    "smallSample": 100,
    "statTestType": "Z-Test",
    "stats.prec": 2,
    "tables": {},
    "verySmallSample": 30
   },
   "updatedBy": 33981,
   "updatedOn": 1693335886000,
   "version": 98
  }
 ],
 "tablesets": [
  {
   "access": "public",
   "id": "5wungqsxvdw8sqn8",
   "include": "FindProduct$ vFindCorrect$ vEaseOfFind$ F_FlashCount$",
   "title": "Version",
   "userId": 33981
  },
  {
   "__type__": "Tableset",
   "access": "public",
   "id": "c3047889jz82963s",
   "include": "P_Shopping$ vProductsBought$ EaseofShopping$ F_Layout$net1 F_LineCommunication$net1 F_Aesthetics$ Q_OA$ FamilyFit$ Differentiation$ Q_PI$ Q_Value$",
   "title": "Phase",
   "userId": 33981
  },
  {
   "access": "private",
   "id": "89q6cc9qd0z4punb",
   "include": "S_Gender$ S_Age$ S_PastParticipation$ S_Industry$ S_OralCareShop$ S_Frequency$r1 S_Frequency$r2 S_Frequency$TB S_Usage$ S_Brand_PastPurchased3$ S_Brand_BUMO3$ S_Spend$ S_Spend2$ S_Brand_PastPurchased$ S_Brand_BUMO$ Gender$ Age$ Usage$ BUMO$ Phase$ S_State$ C_Employment$ STANDARD_RELATIONSHIP$ STANDARD_EDUCATION$ STANDARD_INCOME$ STANDARD_ETHNICITY$ STANDARD_HISPANIC$",
   "title": "Screener",
   "userId": 33981
  },
  {
   "access": "private",
   "id": "hfj1aywftjuf6xk6",
   "include": "P_Shopping$ EaseofShopping$",
   "title": "Shopping",
   "userId": 33981
  },
  {
   "__type__": "Tableset",
   "access": "public",
   "id": "4aze2e5mn4353w5k",
   "include": "Q_Likes_11$ Q_Dislikes_11$ Q_Likes_12$ Q_Dislikes_12$ Q_Likes_13$ Q_Dislikes_13$ Q_Likes_14$ Q_Dislikes_14$ Q_Likes_15$ Q_Dislikes_15$ Q_Likes_21$ Q_Dislikes_21$ Q_Likes_22$ Q_Dislikes_22$ Q_Likes_23$ Q_Dislikes_23$ Q_Likes_24$ Q_Dislikes_24$ Q_Likes_25$ Q_Dislikes_25$ Q_Likes_31$ Q_Dislikes_31$ Q_Likes_32$ Q_Dislikes_32$ Q_Likes_33$ Q_Dislikes_33$ Q_Likes_34$ Q_Dislikes_34$ Q_Likes_35$ Q_Dislikes_35$",
   "title": "Likes/Dislikes",
   "userId": 73070
  },
  {
   "__type__": "Tableset",
   "access": "public",
   "id": "4pm3v3f5hjnsyq4x",
   "include": "P_QuantityPurchased$sumsummary",
   "title": "Sum Summary",
   "userId": 33981
  },
  {
   "access": "private",
   "id": "ryfjj8f844jnrnza",
   "include": "F_EaseOfFind$ vEaseOfFind$",
   "title": "easeoffind",
   "userId": 33981
  },
  {
   "access": "public",
   "id": "v3rmxb0cr7jn09ya",
   "include": "FindProduct$ vEaseOfFind$",
   "title": "Findability",
   "userId": 33981
  }
 ],
 "weights": [],
 "xtabs": [
  {
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "createdBy": null,
   "createdOn": 1434135893000,
   "id": "9v7wkrjpvantrqkv",
   "items": {
    "0": {
     "__legacy__": true,
     "__type__": "Segment",
     "cond": "(ALL)",
     "enableUI": true,
     "id": "1rjn3bnnvkwf2ne9",
     "joins": [],
     "logicNodes": [
      {
       "__type__": "LogicNode",
       "choices": {},
       "cols": {},
       "countLogicValue": "",
       "countryCodes": [],
       "dateValues": {},
       "error": "",
       "extraVarOperator": false,
       "extraVarValue": "",
       "grouping": "",
       "numOperator": false,
       "numValue": "",
       "operator": {
        "key": "any-of",
        "title": "Any of these"
       },
       "qlabel": "all",
       "rangeFrom": "",
       "rangeTo": "",
       "rows": {},
       "sentence": {
        "answers": "",
        "label": "all",
        "prefix": "",
        "title": "All Respondents"
       },
       "textOperator": false,
       "textValues": [],
       "title": ""
      }
     ],
     "nested": false,
     "originalCode": "",
     "sg": "~",
     "title": "Total Sample",
     "weight": null
    },
    "__collection__": true,
    "__type__": "SegmentCollection"
   },
   "lastRunBy": 15756,
   "lastRunByName": "aron.wilson@prs-invivo.com",
   "lastRunOn": 1499457120477,
   "name": "Total Sample",
   "sigtestMajor": 95,
   "sigtestMinor": 90,
   "updatedBy": null,
   "updatedOn": 1434135893000,
   "userId": 15158
  },
  {
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "createdBy": null,
   "createdOn": 1434135893000,
   "id": "wz3pw3bw74rtumz6",
   "items": {
    "0": {
     "__legacy__": true,
     "__type__": "Segment",
     "cond": "(Sample.r1)",
     "enableUI": true,
     "id": "jyhbnz40gd9n9w1m",
     "joins": [],
     "logicNodes": [
      {
       "__type__": "LogicNode",
       "choices": {},
       "cols": {},
       "countLogicValue": "",
       "countryCodes": [],
       "dateValues": {},
       "error": "",
       "extraVarOperator": false,
       "extraVarValue": "",
       "grouping": "cols",
       "numOperator": false,
       "numValue": "",
       "operator": {
        "key": "any-of",
        "title": "Any of these"
       },
       "qlabel": "Sample",
       "rangeFrom": "",
       "rangeTo": "",
       "rows": {
        "r1": true,
        "r2": false
       },
       "sentence": {
        "answers": "Random",
        "label": "Sample",
        "prefix": "",
        "title": "Sample:"
       },
       "textOperator": false,
       "textValues": [],
       "title": ""
      }
     ],
     "nested": false,
     "originalCode": "",
     "sg": "A",
     "title": "Total Rep",
     "weight": null
    },
    "__collection__": true,
    "__type__": "SegmentCollection"
   },
   "lastRunByName": null,
   "name": "Total Rep",
   "sigtestMajor": 95,
   "sigtestMinor": 90,
   "updatedBy": null,
   "updatedOn": 1434135893000,
   "userId": 15158
  },
  {
   "__readOnly__": false,
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "additionalFilter": null,
   "base": "answering",
   "createdBy": 33981,
   "createdByName": "jun.jung@behaviorally.com",
   "createdOn": 1689612141886,
   "dateFilter": null,
   "description": "",
   "id": "m0pmtkja2hsbrcz3",
   "items": {
    "0": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1)",
      "id": "y27m47tey0j0hs1a",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "neepncx190jz2kz1",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2)",
      "id": "t90stdawfr1fpbj4",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "91qn1dfthuwfrfu2",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "BCDE",
      "title": "Test 1",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3)",
      "id": "846mhr92rn56a4an",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "12eheykcwe6df35e",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "BCDE",
      "title": "Test 2",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4)",
      "id": "ts4n70q9a4502psz",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "wsbx4cwu40paq9cp",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "BCDE",
      "title": "Test 3",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5)",
      "id": "n3542xagf365rrse",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ja8fde2gpydhbw6d",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "BCDE",
      "title": "Test 4",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "4302sf8rt86zj6cg",
     "title": "Category Rep"
    },
    "__collection__": true,
    "__type__": "SegmentCollection",
    "enabled": true,
    "id": "47xxmr6uythj3crj",
    "title": "New Group"
   },
   "lastRunBy": 33981,
   "lastRunByName": "jun.jung@behaviorally.com",
   "lastRunOn": 1690919694881,
   "name": "Quota Check",
   "respStatus": "qualified",
   "segmentsTable": false,
   "sigtestMajor": 95,
   "sigtestMinor": 90,
   "sort": {},
   "statTestContinuity": false,
   "statTestType": "Z-Test",
   "statTestUnpooled": false,
   "tableset": "ALL",
   "updatedBy": 33981,
   "updatedByName": "jun.jung@behaviorally.com",
   "updatedOn": 1689612836000,
   "userId": 33981,
   "weight": null
  },
  {
   "__readOnly__": false,
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "additionalFilter": null,
   "base": "answering",
   "createdBy": 33981,
   "createdByName": "jun.jung@behaviorally.com",
   "createdOn": 1690810264887,
   "dateFilter": {
    "__type__": "DateFilter",
    "cond": "date_range(\"27-Jun-2023\", \"01-Aug-2023\")",
    "dateEnd": "2023-08-01T19:51:04.032Z",
    "dateStart": "2023-06-27T04:00:00.000Z",
    "range": "(06/27/23 - 08/01/23)",
    "type": "all"
   },
   "description": "",
   "id": "54bcugmdxqm59x15",
   "items": {
    "0": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1)",
      "id": "0r9ccu42e7g43m13",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "abrxwfn0k20ucybr",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2)",
      "id": "3gr82ncamfb6hzj3",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "zvz6u5bem0kcnsmn",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3)",
      "id": "a2uwpnkd2ufwwegj",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "pc27p8scjttunpk5",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window Multi Head",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4)",
      "id": "f7pmqtuz1b35djz5",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "x8vtw83z2kt39fv3",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Front Facing",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5)",
      "id": "0cyaqb3t10t97zz0",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "vftfrnj2ek2rgvsg",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Side Facing",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "72e71tfmhnzztm7c",
     "title": "Category Rep"
    },
    "__collection__": true,
    "__type__": "SegmentCollection",
    "enabled": true,
    "id": "t4fr0wrdcwqkv0pb",
    "title": "New Group"
   },
   "lastRunBy": 33981,
   "lastRunByName": "jun.jung@behaviorally.com",
   "lastRunOn": 1697227265418,
   "name": "Data by phase",
   "respStatus": "qualified",
   "segmentsTable": false,
   "sigtestMajor": 90,
   "sigtestMinor": 100,
   "sort": {},
   "statTestContinuity": false,
   "statTestType": "Z-Test",
   "statTestUnpooled": false,
   "tableset": "4pm3v3f5hjnsyq4x",
   "updatedBy": 33981,
   "updatedByName": "jun.jung@behaviorally.com",
   "updatedOn": 1690919467000,
   "userId": 33981,
   "weight": null
  },
  {
   "__readOnly__": false,
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "additionalFilter": null,
   "base": "answering",
   "createdBy": 33981,
   "createdByName": "jun.jung@behaviorally.com",
   "createdOn": 1690810386567,
   "dateFilter": {
    "__type__": "DateFilter",
    "cond": "date_range(\"27-Jun-2023\", \"31-Jul-2023\")",
    "dateEnd": "2023-07-31T13:33:14.426Z",
    "dateStart": "2023-06-27T04:00:00.000Z",
    "range": "(06/27/23 - 07/31/23)",
    "type": "all"
   },
   "description": "",
   "id": "291sm6r0f11tx6hc",
   "items": {
    "0": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r1)",
      "id": "3mbbw83xhbvm2u4b",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "envtdrjj1m5jj5e1",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "kgcgv7rbpsunpk27",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r1)",
      "id": "96quavx3tjxjvfg4",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "v0g3b6ugypxheksd",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "f0405z6hn9r4sp9k",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 1",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r1)",
      "id": "5qr6rgd9na98m0f7",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "q1ue4d4ymus66szu",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "zvvff4brfjzhu44m",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 2",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r1)",
      "id": "cc1ehrby0pmykn47",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "em45s1gzp1sq1d3b",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ju7vsb031nhs28yb",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 3",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r1)",
      "id": "bt7uu752yxebgkk8",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "0eg1aek9fp8s5qsf",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "xd9v9ncsuh3r8spc",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 4",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "nupjy3rgac19zya2",
     "title": "Version A"
    },
    "1": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r2)",
      "id": "953tcu87g3dsz0tn",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "52vz902erynm79fs",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "v322x9nzgat36654",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r2)",
      "id": "7xa2jbf8rckrh7zu",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "v879b0za2r2ruew2",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "anh7y7y9vwj2amb3",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 1",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r2)",
      "id": "qq7g5272vxz5mqgd",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "6uk3bp4u1bcyzqf9",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ter4pc8afewhr0cd",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 2",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r2)",
      "id": "zc7twsabzmd9a46a",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "2u94vc3jyn41rgpz",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "8db4ugmt5ya0cd90",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 3",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r2)",
      "id": "pgq359vgcuhv3w74",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "d8t38pxjnb1k714v",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "vd7x1jawtbm60dkp",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 4",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "hp5aht9x9afvhq7c",
     "title": "Version B"
    },
    "2": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r3)",
      "id": "17gup8xgzyaa87w0",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "vgpmyn7rkc2b6r48",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "2hxgw3nr8jr70ksh",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r3)",
      "id": "e9qxr9cjyrguqbxk",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "09c72w19k0wnqjfw",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "u8x9su8m1g7dvbgx",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 1",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r3)",
      "id": "rprmaw0y6ejehgxf",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "tup36mke5q56h69j",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "6j8n8jwta19qkyad",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 2",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r3)",
      "id": "ptr9z8vkfzh5fz91",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ncvx9ab1e1kf7uaf",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "znxmzg6bv13wve4g",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 3",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r3)",
      "id": "62qkd372faps1r6q",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "w6pteacuucnbkkrx",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "s5kez48haw9wm57g",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 4",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "4yu6uq5sza12fpqw",
     "title": "Version C"
    },
    "__collection__": true,
    "__type__": "SegmentCollection",
    "enabled": true,
    "id": "brxs1nyy87x2vep5",
    "title": "New Group"
   },
   "lastRunBy": 33981,
   "lastRunByName": "jun.jung@behaviorally.com",
   "lastRunOn": 1692021295219,
   "name": "Data by Version",
   "respStatus": "qualified",
   "segmentsTable": false,
   "sigtestMajor": 95,
   "sigtestMinor": 90,
   "sort": {},
   "statTestContinuity": false,
   "statTestType": "Z-Test",
   "statTestUnpooled": false,
   "tableset": "ALL",
   "updatedBy": 33981,
   "updatedByName": "jun.jung@behaviorally.com",
   "updatedOn": 1690810882000,
   "userId": 33981,
   "weight": null
  },
  {
   "__readOnly__": false,
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "additionalFilter": null,
   "base": "answering",
   "createdBy": 33981,
   "createdByName": "jun.jung@behaviorally.com",
   "createdOn": 1690811936000,
   "dateFilter": {
    "__type__": "DateFilter",
    "cond": "date_range(\"27-Jun-2023\", \"03-Aug-2023\")",
    "dateEnd": "2023-08-03T15:49:32.528Z",
    "dateStart": "2023-06-27T04:00:00.000Z",
    "range": "(06/27/23 - 08/03/23)",
    "type": "all"
   },
   "description": "",
   "id": "~42876.2390",
   "items": {
    "0": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r1) and (S_Brand_BUMO3.r1)",
      "id": "3mbbw83xhbvm2u4b",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "envtdrjj1m5jj5e1",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "kgcgv7rbpsunpk27",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "t9xevs2me1cqv4ru",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r1) and (S_Brand_BUMO3.r1)",
      "id": "96quavx3tjxjvfg4",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "v0g3b6ugypxheksd",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "f0405z6hn9r4sp9k",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "00e0fd3p8hf2ngzz",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r1) and (S_Brand_BUMO3.r1)",
      "id": "5qr6rgd9na98m0f7",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "q1ue4d4ymus66szu",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "zvvff4brfjzhu44m",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "jh3nbjb6dvqewuw6",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window Multi Head",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r1) and (S_Brand_BUMO3.r1)",
      "id": "cc1ehrby0pmykn47",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "em45s1gzp1sq1d3b",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ju7vsb031nhs28yb",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "4bjz6natd0sc2r7b",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Front Facing",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r1) and (S_Brand_BUMO3.r1)",
      "id": "bt7uu752yxebgkk8",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "0eg1aek9fp8s5qsf",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "xd9v9ncsuh3r8spc",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "8hk31mezywnrexr5",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Side Facing",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "nupjy3rgac19zya2",
     "title": "360 Advanced White 1pk"
    },
    "1": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r2) and (S_Brand_BUMO3.r1)",
      "id": "953tcu87g3dsz0tn",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "52vz902erynm79fs",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "v322x9nzgat36654",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "tsqpjct5k09nd4b2",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r2) and (S_Brand_BUMO3.r1)",
      "id": "7xa2jbf8rckrh7zu",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "v879b0za2r2ruew2",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "anh7y7y9vwj2amb3",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "w0ex8bvfgukkpmv3",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "No Window",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r2) and (S_Brand_BUMO3.r1)",
      "id": "qq7g5272vxz5mqgd",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "6uk3bp4u1bcyzqf9",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ter4pc8afewhr0cd",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "dcznyp00y4h4p99z",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "No Window Multi Head",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r2) and (S_Brand_BUMO3.r1)",
      "id": "zc7twsabzmd9a46a",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "2u94vc3jyn41rgpz",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "8db4ugmt5ya0cd90",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "arwtcss1j2fhxbz1",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Window Front Facing",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r2) and (S_Brand_BUMO3.r1)",
      "id": "pgq359vgcuhv3w74",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "d8t38pxjnb1k714v",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "vd7x1jawtbm60dkp",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "r18vupayhq387zk4",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Window Side Facing",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "hp5aht9x9afvhq7c",
     "title": "360 Deep Clean 2 pk"
    },
    "2": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r3) and (S_Brand_BUMO3.r1)",
      "id": "17gup8xgzyaa87w0",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "vgpmyn7rkc2b6r48",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "2hxgw3nr8jr70ksh",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "wdbu7y3cfpp00zkq",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r3) and (S_Brand_BUMO3.r1)",
      "id": "e9qxr9cjyrguqbxk",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "09c72w19k0wnqjfw",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "u8x9su8m1g7dvbgx",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "4zpa37mg5xz4y35y",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "No Window",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r3) and (S_Brand_BUMO3.r1)",
      "id": "rprmaw0y6ejehgxf",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "tup36mke5q56h69j",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "6j8n8jwta19qkyad",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "s5am1tama7gnc0uh",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "No Window Multi Head",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r3) and (S_Brand_BUMO3.r1)",
      "id": "ptr9z8vkfzh5fz91",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ncvx9ab1e1kf7uaf",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "znxmzg6bv13wve4g",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "e6k8qtc3nxzjkbue",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Window Front Facing",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r3) and (S_Brand_BUMO3.r1)",
      "id": "62qkd372faps1r6q",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "w6pteacuucnbkkrx",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "s5kez48haw9wm57g",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "81dpankky7mtz3qw",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Window Side Facing",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "4yu6uq5sza12fpqw",
     "title": "360 Advanced White 4 pk"
    },
    "__collection__": true,
    "__type__": "SegmentCollection",
    "enabled": true,
    "id": "brxs1nyy87x2vep5",
    "title": "New Group"
   },
   "lastRunBy": 33981,
   "lastRunByName": "jun.jung@behaviorally.com",
   "lastRunOn": 1691431260925,
   "name": "Data by Version BUMO",
   "respStatus": "qualified",
   "segmentsTable": false,
   "sigtestMajor": 90,
   "sigtestMinor": 100,
   "sort": {},
   "statTestContinuity": false,
   "statTestType": "Z-Test",
   "statTestUnpooled": false,
   "tableset": "5wungqsxvdw8sqn8",
   "updatedBy": 33981,
   "updatedByName": "jun.jung@behaviorally.com",
   "updatedOn": 1691077913000,
   "userId": 33981,
   "weight": null
  },
  {
   "__readOnly__": false,
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "additionalFilter": null,
   "base": "answering",
   "createdBy": 33981,
   "createdByName": "jun.jung@behaviorally.com",
   "createdOn": 1690898764530,
   "dateFilter": {
    "__type__": "DateFilter",
    "cond": "date_range(\"27-Jun-2023\", \"14-Aug-2023\")",
    "dateEnd": "2023-08-14T14:06:30.312Z",
    "dateStart": "2023-06-27T04:00:00.000Z",
    "range": "(06/27/23 - 08/14/23)",
    "type": "all"
   },
   "description": "",
   "id": "yqg4z7vsfxr0fagt",
   "items": {
    "0": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r1) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "mcsbgf9050z0p1kg",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "sp1yxgrz7fr6a6ny",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "gmqhqbpdm3r7ue3s",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "1gkdzwgbp6g736f0",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &lt;strong&gt;OR&lt;&#47;strong&gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &lt;strong&gt;OR&lt;&#47;strong&gt; A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &lt;strong&gt;OR&lt;&#47;strong&gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r1) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "pnfhfkfj2dw4v8r6",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "b7w4wvyr9hbt0qa5",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "9rsf6v1146a9dc21",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "5butz2axtgu7xd1x",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 1",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r1) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "xd35gca2z19ta1uw",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "v9csaat7386bqu5h",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "jrctx6cb2wjaqqad",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "4ur29zdb39amu1km",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 2",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r1) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "2ch9e8rjqg6g7uyp",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "7vvgnjmf2a9qg551",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "3r9f3wk5sva2qb9j",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "76e1a3kvyz5dcku6",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 3",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r1) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "tyxdm31n0eqrwgdn",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "wkd9jjt80gp9zba2",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "42p82f4hsf8dcb8h",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false
        },
        "sentence": {
         "answers": "A",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "4a3ed75nnx172nyt",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Test 4",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "m0u1wwqu5ypumajp",
     "title": "Version A"
    },
    "1": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r2) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "ycagwy0khw768jq9",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "d49eqfxfbufdgmsw",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "d82wxuzu9tg0vtqt",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "nhqdt461a1ge9fe9",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r2) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "nz7cjbprz2puddw3",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "5bdz3jg2ewq44g9f",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "uu2j4zzm6hhfu44f",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "2dfh407ub50m3ymm",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 1",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r2) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "tec3kwpcx92mbg93",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "be4tvnvqzn3a3g77",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ru5htav5gx66aeww",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "6q8b9zr46591vbkh",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 2",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r2) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "2eu8ss16g3adtm8g",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "rbd8kuvktyb4dmdm",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "uhm6g7z0jj79uk7y",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "q6av6q09p52e67rd",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 3",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r2) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "qxw1c0wsb6zzrbgr",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "37rh3zwaas0vpq2t",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ude7e7qfqfr1y1xk",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false
        },
        "sentence": {
         "answers": "B",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "jtmgxnp8xzv925nx",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Test 4",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "kbbh3wbgrxymcasn",
     "title": "Version B"
    },
    "2": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (Version.r3) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "rwt9h8mqfzayav0w",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "6jptztjfb2dj01gc",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "psdhkscgrmz7fa07",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "95jmmkneyf81mq3j",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (Version.r3) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "etxn2xdr1jvncfnu",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "z4zx1usucgdjrcmr",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "t7yrsu0h3nvkp4z3",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "p9k27ebjbcgg5ugb",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 1",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (Version.r3) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "kkww974n57w3ukuj",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "ybbsvgt1hdxuqrzn",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "4d6j2kvsjqcnj41d",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "7scepwtrp2b21u5v",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 2",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (Version.r3) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "rbfyyy1z209fwrgd",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "7m9sb4117kzjhu2m",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "b02sajkn7fp2n09s",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "9gph2fqqn33e07ue",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 3",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (Version.r3) and (P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
      "id": "xa6jzwx5g4hpequs",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       },
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "mawp972wx53hkjqx",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Version.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "a9upkf0sa5zjvych",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Version",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true
        },
        "sentence": {
         "answers": "C",
         "label": "Version",
         "prefix": "",
         "title": "Version:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(P_Shopping.r40 or P_Shopping.r14 or P_Shopping.r11 or P_Shopping.r38)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "wrysndbn2pjj5rfa",
        "mode": "question",
        "numOperator": {
         "key": "eq",
         "title": "Equal to"
        },
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "P_Shopping",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r10": false,
         "r11": true,
         "r12": false,
         "r13": false,
         "r14": true,
         "r15": false,
         "r16": false,
         "r17": false,
         "r18": false,
         "r19": false,
         "r2": false,
         "r20": false,
         "r21": false,
         "r22": false,
         "r23": false,
         "r24": false,
         "r25": false,
         "r26": false,
         "r27": false,
         "r28": false,
         "r29": false,
         "r3": false,
         "r30": false,
         "r31": false,
         "r32": false,
         "r33": false,
         "r34": false,
         "r35": false,
         "r36": false,
         "r37": false,
         "r38": true,
         "r39": false,
         "r4": false,
         "r40": true,
         "r41": false,
         "r42": false,
         "r43": false,
         "r44": false,
         "r45": false,
         "r46": false,
         "r47": false,
         "r48": false,
         "r49": false,
         "r5": false,
         "r50": false,
         "r6": false,
         "r7": false,
         "r8": false,
         "r9": false
        },
        "sentence": {
         "answers": "A11 -- Colgate Gum Health Charcoal 4 Pack Ultra Soft -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; A14 -- Colgate Soft Adv White 360 Soft 4pk -- $13.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C11 -- Colgate 360 Deep Clean Soft 4pk -- $9.96 &amp;lt;strong&amp;gt;OR&amp;lt;&amp;&#35;47;strong&amp;gt; C13 -- Colgate 360 Deep Clean Soft 4pk -- $9.96",
         "label": "P_Shopping",
         "prefix": "",
         "title": "Products Bought"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "KLMNO",
      "title": "Test 4",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "srsjg75ep0uadx9a",
     "title": "Version C"
    },
    "__collection__": true,
    "__type__": "SegmentCollection",
    "enabled": true,
    "id": "0u5mvts8uuw1x6f4",
    "title": "New Group"
   },
   "lastRunBy": 33981,
   "lastRunByName": "jun.jung@behaviorally.com",
   "lastRunOn": 1692022001774,
   "name": "Data by Version 4pk buyers",
   "respStatus": "qualified",
   "segmentsTable": false,
   "sigtestMajor": 90,
   "sigtestMinor": 100,
   "sort": {},
   "statTestContinuity": false,
   "statTestType": "Z-Test",
   "statTestUnpooled": false,
   "tableset": "5wungqsxvdw8sqn8",
   "updatedBy": 33981,
   "updatedByName": "jun.jung@behaviorally.com",
   "updatedOn": 1692021999000,
   "userId": 33981,
   "weight": null
  },
  {
   "__readOnly__": false,
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "additionalFilter": null,
   "base": "answering",
   "createdBy": 33981,
   "createdByName": "jun.jung@behaviorally.com",
   "createdOn": 1691074193933,
   "dateFilter": {
    "__type__": "DateFilter",
    "cond": "date_range(\"27-Jun-2023\", \"03-Aug-2023\")",
    "dateEnd": "2023-08-03T14:51:03.675Z",
    "dateStart": "2023-06-27T04:00:00.000Z",
    "range": "(06/27/23 - 08/03/23)",
    "type": "all"
   },
   "description": "",
   "id": "zb2h1swvccf0yn8b",
   "items": {
    "0": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1)",
      "id": "09jcvvjk44nr4utq",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "xjnadtbva5vwp1je",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2)",
      "id": "wrwxr70mwcfvxcpj",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "he51y6470e01egwg",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3)",
      "id": "my9ywczqv179vtpj",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "f9mbh9zug3nvkfy7",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window Multi Head",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4)",
      "id": "q5wrp7ajk0uwdv0g",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "m7angj3rbzjzcx57",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Front Facing",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5)",
      "id": "7vgr9h4sjv97jspd",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "kvzhbqs3w91sd6yt",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Side Facing",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "gjn9hd3442ka4sda",
     "title": "Category Rep"
    },
    "1": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1) and (S_Brand_BUMO3.r1)",
      "id": "x5rg1wkhgcq4nt7a",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "h2yd2eg4pkrr9mp0",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "bezn5xprtch9ys2b",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2) and (S_Brand_BUMO3.r1)",
      "id": "ynyb2fjnk26tvjfp",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "16yjydtcd5kgenp0",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "we1u1ntfc0duwa3u",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "No Window",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3) and (S_Brand_BUMO3.r1)",
      "id": "hdzu55du9dnduj1s",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "bykdhan98ahktc8p",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "m0caa0g6q7ybazbe",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "No Window Multi Head",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4) and (S_Brand_BUMO3.r1)",
      "id": "2vkkz7by4nzzvp58",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "we3scgtt0zt244mq",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "8mamqscagrkrwyv3",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Window Front Facing",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5) and (S_Brand_BUMO3.r1)",
      "id": "0n7j3cmf04b8feu0",
      "joins": [
       {
        "operator": "and",
        "title": "And"
       }
      ],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "1m45ffqnjv47sp6c",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       },
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(S_Brand_BUMO3.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "wa17w8tyj79ws9zj",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "S_Brand_BUMO3",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false,
         "r6": false,
         "r7": false,
         "r8": false
        },
        "sentence": {
         "answers": "Colgate",
         "label": "S_Brand_BUMO3",
         "prefix": "",
         "title": "And which one brand of manual toothbrush have you used most often in the past 6 months?"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "FGHIJ",
      "title": "Window Side Facing",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "ub8ax07vkr2xx3xx",
     "title": "BUMO"
    },
    "__collection__": true,
    "__type__": "SegmentCollection",
    "enabled": true,
    "id": "wyarx7rxbu0nsdyp",
    "title": "New Group"
   },
   "lastRunBy": 33981,
   "lastRunByName": "jun.jung@behaviorally.com",
   "lastRunOn": 1691542474247,
   "name": "Data by phase BUMO Added",
   "respStatus": "qualified",
   "segmentsTable": false,
   "sigtestMajor": 90,
   "sigtestMinor": 80,
   "sort": {},
   "statTestContinuity": false,
   "statTestType": "Z-Test",
   "statTestUnpooled": false,
   "tableset": "hfj1aywftjuf6xk6",
   "updatedBy": 33981,
   "updatedByName": "jun.jung@behaviorally.com",
   "updatedOn": 1691074277000,
   "userId": 33981,
   "weight": null
  },
  {
   "__readOnly__": false,
   "__saved__": true,
   "__type__": "Config",
   "__version__": 4.0,
   "access": "public",
   "additionalFilter": null,
   "base": "answering",
   "createdBy": 33981,
   "createdByName": "jun.jung@behaviorally.com",
   "createdOn": 1691175185000,
   "dateFilter": {
    "__type__": "DateFilter",
    "cond": "date_range(\"27-Jun-2023\", \"04-Aug-2023\")",
    "dateEnd": "2023-08-04T18:36:06.376Z",
    "dateStart": "2023-06-27T04:00:00.000Z",
    "range": "(06/27/23 - 08/04/23)",
    "type": "all"
   },
   "description": "",
   "id": "~288563.1212",
   "items": {
    "0": {
     "0": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r1)",
      "id": "0r9ccu42e7g43m13",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r1)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "abrxwfn0k20ucybr",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": true,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "1",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Current",
      "weight": null
     },
     "1": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r2)",
      "id": "3gr82ncamfb6hzj3",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r2)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "zvz6u5bem0kcnsmn",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": true,
         "r3": false,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "2",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window",
      "weight": null
     },
     "2": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r3)",
      "id": "a2uwpnkd2ufwwegj",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r3)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "pc27p8scjttunpk5",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": true,
         "r4": false,
         "r5": false
        },
        "sentence": {
         "answers": "3",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "No Window Multi Head",
      "weight": null
     },
     "3": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r4)",
      "id": "f7pmqtuz1b35djz5",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r4)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "x8vtw83z2kt39fv3",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": true,
         "r5": false
        },
        "sentence": {
         "answers": "4",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Front Facing",
      "weight": null
     },
     "4": {
      "__legacy__": false,
      "__type__": "Segment",
      "cond": "(Phase.r5)",
      "id": "0cyaqb3t10t97zz0",
      "joins": [],
      "logicNodes": [
       {
        "__type__": "LogicNode",
        "axis": {},
        "choices": {},
        "cols": {},
        "cond": "(Phase.r5)",
        "countLogicValue": "",
        "countryCodes": [],
        "dateValues": {},
        "extraVarOperator": false,
        "extraVarValue": "",
        "grouping": "cols",
        "id": "vftfrnj2ek2rgvsg",
        "mode": "question",
        "numOperator": false,
        "numValue": "",
        "operator": {
         "key": "any-of",
         "title": "Any of these"
        },
        "previousSegments": [],
        "qlabel": "Phase",
        "rangeFrom": "",
        "rangeTo": "",
        "rows": {
         "r1": false,
         "r2": false,
         "r3": false,
         "r4": false,
         "r5": true
        },
        "sentence": {
         "answers": "5",
         "label": "Phase",
         "prefix": "",
         "title": "Phase:"
        },
        "textOperator": false,
        "textValues": []
       }
      ],
      "sg": "ABCDE",
      "title": "Window Side Facing",
      "weight": null
     },
     "__collection__": true,
     "__type__": "SegmentCollection",
     "enabled": true,
     "id": "72e71tfmhnzztm7c",
     "title": "Category Rep"
    },
    "__collection__": true,
    "__type__": "SegmentCollection",
    "enabled": true,
    "id": "t4fr0wrdcwqkv0pb",
    "title": "New Group"
   },
   "lastRunBy": 33981,
   "lastRunByName": "jun.jung@behaviorally.com",
   "lastRunOn": 1693335886783,
   "name": "Data by phase",
   "respStatus": "qualified",
   "segmentsTable": false,
   "sigtestMajor": 90,
   "sigtestMinor": 100,
   "sort": {},
   "statTestContinuity": false,
   "statTestType": "Z-Test",
   "statTestUnpooled": false,
   "tableset": "hfj1aywftjuf6xk6",
   "updatedBy": 33981,
   "updatedByName": "jun.jung@behaviorally.com",
   "updatedOn": 1691175185000,
   "userId": 33981,
   "weight": null
  }
 ]
}